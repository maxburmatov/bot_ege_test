from aiogram import Router, Bot, F
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter

from aiogram.utils.deep_linking import create_start_link
from core.database.metods.get_student import get_count_invite
from core.database.metods.request_users import add_request

from core.keyboards.reply import info_menu, help_menu, back_info, faq_menu
from core.lexicon.lexicon import LEXICON_BUTTON, LEXICON_STICKERS
from core.states.states import StateRequestError, StateRequestQuestion
from core.utils.functions import delete_message

router = Router()

@router.message((F.text == LEXICON_BUTTON["info"]) | (F.text == LEXICON_BUTTON["back_info"]) | (F.text == "/info"))
async def info(message: Message, bot: Bot, state: FSMContext):

    await delete_message(message, message.chat.id, message.message_id)

    await state.clear()

    await bot.send_sticker(message.from_user.id, LEXICON_STICKERS["info"])
    await message.answer("ü§ñ: –ß—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?", reply_markup=info_menu)

@router.message(F.text == LEXICON_BUTTON["invite_friends"])
async def invite_friends(message: Message, bot: Bot):

    await delete_message(message, message.chat.id, message.message_id)

    link = await create_start_link(bot, str(message.from_user.id), encode=True)
    count_invite_friends = await get_count_invite(message.from_user.id)
    answer_invite = await message_invite(count_invite_friends)

    await message.answer(f"ü§ñ: –¢–≤–æ—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π, –Ω–∞–∂–º–∏ –Ω–∞ –Ω–µ–µ –∏ –æ–Ω–∞ —Å–∫–æ–ø–∏—Ä—É–µ—Ç—Å—è:\n"
                         f"<code>{link}</code> "
                         f"\n\n{answer_invite}",
                         parse_mode=ParseMode.HTML,
                         reply_markup=info_menu)


@router.message(F.text == LEXICON_BUTTON["help"])
async def invite_friends(message: Message, bot: Bot):

    await delete_message(message, message.chat.id, message.message_id)

    await message.answer(f"ü§ñ: –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?",
                         reply_markup=help_menu)

@router.message(F.text == LEXICON_BUTTON["report_error"])
async def invite_friends(message: Message, bot: Bot, state: FSMContext):

    await delete_message(message, message.chat.id, message.message_id)

    await message.answer(f"ü§ñ: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏ –≤ —á—ë–º –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –æ—à–∏–±–∫–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç!",
                         reply_markup=back_info)

    await state.set_state(StateRequestError.REQUEST_ERROR)


@router.message(StateFilter(StateRequestError.REQUEST_ERROR), F.content_type.in_({'text'}))
async def invite_friends(message: Message, bot: Bot, state: FSMContext):

    await delete_message(message, message.chat.id, message.message_id)

    text_request = message.text
    date_request = message.date

    await add_request(date_request, message.chat.id, "error", text_request, None, "new")

    await message.answer(f"ü§ñ: –ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –ø–æ–º–æ—â—å! –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –º–æ–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ —ç—Ç–∏–º –∑–∞–π–º—É—Ç—Å—è!",
                         reply_markup=help_menu)

    await state.clear()

@router.message(StateFilter(StateRequestError.REQUEST_ERROR), F.content_type.in_({'photo'}))
async def invite_friends(message: Message, bot: Bot, state: FSMContext):

    await delete_message(message, message.chat.id, message.message_id)

    text_request = message.caption
    photo_request = message.photo[-1].file_id
    date_request = message.date

    await add_request(date_request, message.chat.id, "error", text_request, photo_request, "new")

    await message.answer(f"ü§ñ: –ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –ø–æ–º–æ—â—å! –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –º–æ–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ —ç—Ç–∏–º –∑–∞–π–º—É—Ç—Å—è!",
                         reply_markup=help_menu)

    await state.clear()
@router.message(StateFilter(StateRequestError.REQUEST_ERROR))
async def invite_friends(message: Message, bot: Bot, state: FSMContext):

    await delete_message(message, message.chat.id, message.message_id)

    await message.answer(f"ü§ñ: –Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é... –û—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º!",
                         reply_markup=back_info)

    await state.set_state(StateRequestError.REQUEST_ERROR)


@router.message(F.text == LEXICON_BUTTON["faq"])
async def invite_friends(message: Message, bot: Bot, state: FSMContext):
    await delete_message(message, message.chat.id, message.message_id)

    await message.answer(f"ü§ñ: [–í–æ–ø—Ä–æ—Å - –û—Ç–≤–µ—Ç]",
                         reply_markup=faq_menu)

@router.message(F.text == LEXICON_BUTTON["ask_question"])
async def invite_friends(message: Message, bot: Bot, state: FSMContext):
    await delete_message(message, message.chat.id, message.message_id)

    await message.answer(f"ü§ñ: –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç!",
                         reply_markup=back_info)

    await state.set_state(StateRequestQuestion.REQUEST_QUESTION)


@router.message(StateFilter(StateRequestQuestion.REQUEST_QUESTION), F.content_type.in_({'text'}))
async def invite_friends(message: Message, bot: Bot, state: FSMContext):

    await delete_message(message, message.chat.id, message.message_id)

    text_request = message.text
    date_request = message.date

    await add_request(date_request, message.chat.id, "question", text_request, None, "new")

    await message.answer(f"ü§ñ: –Ø –ø—Ä–∏–Ω—è–ª —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å, —É—Ç–æ—á–Ω—é —É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –≤–µ—Ä–Ω—É—Å—å –∫ —Ç–µ–±–µ —Å –æ—Ç–≤–µ—Ç–æ–º!",
                         reply_markup=help_menu)

    await state.clear()

@router.message(StateFilter(StateRequestQuestion.REQUEST_QUESTION), F.content_type.in_({'photo'}))
async def invite_friends(message: Message, bot: Bot, state: FSMContext):

    await delete_message(message, message.chat.id, message.message_id)

    text_request = message.caption
    photo_request = message.photo[-1].file_id
    date_request = message.date

    await add_request(date_request, message.chat.id, "question", text_request, photo_request, "new")

    await message.answer(f"ü§ñ: –Ø –ø—Ä–∏–Ω—è–ª —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å, —É—Ç–æ—á–Ω—é —É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –≤–µ—Ä–Ω—É—Å—å –∫ —Ç–µ–±–µ —Å –æ—Ç–≤–µ—Ç–æ–º!",
                         reply_markup=help_menu)

    await state.clear()
@router.message(StateFilter(StateRequestQuestion.REQUEST_QUESTION))
async def invite_friends(message: Message, bot: Bot, state: FSMContext):

    await delete_message(message, message.chat.id, message.message_id)

    await message.answer(f"ü§ñ: –Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é... –û—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º!",
                         reply_markup=back_info)

    await state.set_state(StateRequestQuestion.REQUEST_QUESTION)


async def message_invite(count_invite_friends):
    if count_invite_friends == 0:
        str_invite = f"ü§ñ: –ü–æ–∫–∞ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π :("
    elif count_invite_friends < 5:
        str_invite = f"ü§ñ: –¢—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª {count_invite_friends} –¥—Ä—É–≥–∞!"
    else:
        str_invite = f"ü§ñ: –¢—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª {count_invite_friends} –¥—Ä—É–∑–µ–π!"

    return str_invite
